name: Update Data Contract

on:
  push:
    branches:
      - main
      - 'feature/*'  # Grane koje želiš da pratiš
    paths:
      - 'datacontract.yaml'  # Praćenje izmena na datacontract.yaml

jobs:
  update-datacontract:
    runs-on: ubuntu-latest

    steps:
      # Provera koda iz repozitorijuma
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2  # Povuci dva commita da bi 'git diff' mogao da funkcioniše

      # Provera da li je 'datacontract.yaml' promenjen
      - name: Check for datacontract.yaml changes
        id: check_changes
        run: |
          if git diff --name-only HEAD^ HEAD | grep -q "datacontract.yaml"; then
            echo "datacontract_updated=true" >> $GITHUB_ENV
          else
            echo "datacontract_updated=false" >> $GITHUB_ENV
          fi

      # Preuzmi granu i commit informacije
      - name: Get branch and commit info
        id: get_info
        run: |
          BRANCH=$(echo "${GITHUB_REF}" | sed 's/refs\/heads\///')
          echo "::set-output name=branch::${BRANCH}"
          COMMIT_ID=$(git rev-parse HEAD)
          echo "::set-output name=commit_id::${COMMIT_ID}"

      # Slanje POST zahteva lokalnom API-ju
      - name: Send POST request to backend
        if: env.datacontract_updated == 'true'
        run: |
          BRANCH=${{ steps.get_info.outputs.branch }}
          COMMIT_ID=${{ steps.get_info.outputs.commit_id }}
          curl -X POST https://abcd1234.ngrok.io/v1/data-contract \
          -H "Content-Type: multipart/form-data" \
          -F "file=@datacontract.yaml" \
          -F "version=3.0.0" \
          -F "branch=${BRANCH}" \
          -F "commitId=${COMMIT_ID}"
